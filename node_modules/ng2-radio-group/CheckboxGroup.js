"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var core_1 = require("angular2/core");
var CheckboxGroup = (function () {
    function CheckboxGroup() {
        this.modelChange = new core_1.EventEmitter();
    }
    CheckboxGroup.prototype.addOrRemoveValue = function (value) {
        if (this.hasValue(value)) {
            this.model.splice(this.model.indexOf(value), 1);
        }
        else {
            this.model.push(value);
        }
        this.modelChange.emit(this.model);
    };
    CheckboxGroup.prototype.hasValue = function (value) {
        return this.model && this.model.indexOf(value) !== -1;
    };
    __decorate([
        core_1.Output(), 
        __metadata('design:type', Object)
    ], CheckboxGroup.prototype, "modelChange", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Array)
    ], CheckboxGroup.prototype, "model", void 0);
    CheckboxGroup = __decorate([
        core_1.Component({
            selector: "checkbox-group",
            template: "<div class=\"checkbox-group\"><ng-content></ng-content></div>"
        }), 
        __metadata('design:paramtypes', [])
    ], CheckboxGroup);
    return CheckboxGroup;
}());
exports.CheckboxGroup = CheckboxGroup;
var CheckboxItem = (function () {
    function CheckboxItem(checkboxGroup) {
        this.checkboxGroup = checkboxGroup;
    }
    CheckboxItem.prototype.check = function () {
        this.checkboxGroup.addOrRemoveValue(this.value);
    };
    CheckboxItem.prototype.isChecked = function () {
        return this.checkboxGroup.hasValue(this.value);
    };
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], CheckboxItem.prototype, "value", void 0);
    CheckboxItem = __decorate([
        core_1.Component({
            selector: "checkbox-item",
            template: "\n<div class=\"checkbox-item\" (click)=\"check()\">\n    <input type=\"checkbox\" [checked]=\"isChecked()\"/> <ng-content></ng-content>\n</div>"
        }),
        __param(0, core_1.Host()), 
        __metadata('design:paramtypes', [CheckboxGroup])
    ], CheckboxItem);
    return CheckboxItem;
}());
exports.CheckboxItem = CheckboxItem;
//# sourceMappingURL=CheckboxGroup.js.map