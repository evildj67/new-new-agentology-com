"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var core_1 = require("angular2/core");
var RadioGroup = (function () {
    function RadioGroup() {
        this.modelChange = new core_1.EventEmitter();
    }
    RadioGroup.prototype.change = function (value) {
        this.model = value;
        this.modelChange.emit(value);
    };
    __decorate([
        core_1.Output(), 
        __metadata('design:type', Object)
    ], RadioGroup.prototype, "modelChange", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], RadioGroup.prototype, "model", void 0);
    RadioGroup = __decorate([
        core_1.Component({
            selector: "radio-group",
            template: "<div class=\"radio-group\"><ng-content></ng-content></div>"
        }), 
        __metadata('design:paramtypes', [])
    ], RadioGroup);
    return RadioGroup;
}());
exports.RadioGroup = RadioGroup;
var RadioItem = (function () {
    function RadioItem(radioGroup) {
        this.radioGroup = radioGroup;
    }
    RadioItem.prototype.check = function () {
        this.radioGroup.change(this.value);
    };
    RadioItem.prototype.isChecked = function () {
        return this.radioGroup.model === this.value;
    };
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], RadioItem.prototype, "value", void 0);
    RadioItem = __decorate([
        core_1.Component({
            selector: "radio-item",
            template: "\n<div class=\"radio-item\" (click)=\"check()\">\n    <input type=\"radio\" [checked]=\"isChecked()\"/> <ng-content></ng-content>\n</div>"
        }),
        __param(0, core_1.Host()), 
        __metadata('design:paramtypes', [RadioGroup])
    ], RadioItem);
    return RadioItem;
}());
exports.RadioItem = RadioItem;
//# sourceMappingURL=RadioGroup.js.map